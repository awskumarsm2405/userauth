name: Docker Image CI
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
env:
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  PRODUCT_REPO_NAME: ${{secrets.PRODUCT_REPO_NAME}}


jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x] # Define a matrix of Node.js versions to test.There would be 3 jobs for 12.x, 14.x, 16.x


    steps:
      - uses: actions/checkout@v2
      
      - name: Working Dir
        run: |
          echo $DOCKER_USERNAME
          echo $DOCKER_PASSWORD
          echo $PRODUCT_REPO_NAME
          echo "$DOCKER_USERNAME/$PRODUCT_REPO_NAME:$(date +%s)"
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm' # Step 2: Use npm caching for faster dependency installs.

      - name: Install Node.js dependencies
        run: npm ci # Step 3: Perform a clean install of Node.js dependencies.
      - name: Run build
        run: npm run build 
      - name: Run tests
        run: npm test 
      - name: Docker login
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Build user service docker image
        run: docker build . --file Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_NAME:latest"
      - name: Push user service docker image
        run: docker push "$DOCKER_USERNAME/$PRODUCT_REPO_NAME:latest"
